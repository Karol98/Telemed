[{"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\index.js":"1","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\App.js":"2","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Dashboard.js":"3","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Login.js":"4","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Signup.js":"5","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Contact.js":"6","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\PrivateRoute.js":"7","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\UpdateProfile.js":"8","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Diagnose.js":"9","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Home.js":"10","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\ForgotPassword.js":"11","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Chat.js":"12","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\About.js":"13","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\DoctorFinder.js":"14","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\contexts\\AuthContext.js":"15","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Footer.js":"16","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\DoctorFinderTab.js":"17","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Body.js":"18","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\NaviBar.js":"19","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\firebase.js":"20","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Logout.js":"21","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Translator.js":"22"},{"size":261,"mtime":1612121773404,"results":"23","hashOfConfig":"24"},{"size":1490,"mtime":1612130864046,"results":"25","hashOfConfig":"24"},{"size":1110,"mtime":1612121773361,"results":"26","hashOfConfig":"24"},{"size":3252,"mtime":1612121773364,"results":"27","hashOfConfig":"24"},{"size":2111,"mtime":1612121773365,"results":"28","hashOfConfig":"24"},{"size":2034,"mtime":1612121773360,"results":"29","hashOfConfig":"24"},{"size":421,"mtime":1612121773365,"results":"30","hashOfConfig":"24"},{"size":2685,"mtime":1612121773365,"results":"31","hashOfConfig":"24"},{"size":593,"mtime":1612121773361,"results":"32","hashOfConfig":"24"},{"size":1006,"mtime":1612121773363,"results":"33","hashOfConfig":"24"},{"size":1749,"mtime":1612121773363,"results":"34","hashOfConfig":"24"},{"size":2501,"mtime":1612121773360,"results":"35","hashOfConfig":"24"},{"size":1194,"mtime":1612142779765,"results":"36","hashOfConfig":"24"},{"size":2991,"mtime":1612121773362,"results":"37","hashOfConfig":"24"},{"size":1346,"mtime":1612121773403,"results":"38","hashOfConfig":"24"},{"size":219,"mtime":1612121773362,"results":"39","hashOfConfig":"24"},{"size":1310,"mtime":1612121773362,"results":"40","hashOfConfig":"24"},{"size":2198,"mtime":1612122589111,"results":"41","hashOfConfig":"24"},{"size":1737,"mtime":1612121773364,"results":"42","hashOfConfig":"24"},{"size":446,"mtime":1612121773403,"results":"43","hashOfConfig":"24"},{"size":700,"mtime":1612121773364,"results":"44","hashOfConfig":"24"},{"size":736,"mtime":1612142397157,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jnefde",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\index.js",[],["99","100"],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\App.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Dashboard.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Login.js",["101","102"],"import React, {useRef, useState} from \"react\"\r\nimport {Form, Button, Card, Alert} from \"react-bootstrap\"\r\nimport {useAuth} from \"../contexts/AuthContext\"\r\nimport {Link, useHistory} from \"react-router-dom\"\r\nimport NaviBar from \"./NaviBar\";\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nimport Home from './Home'\r\nimport {useAuthState} from 'react-firebase-hooks/auth';\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport default function Login() {\r\n    const emailRef = useRef()\r\n    const auth = firebase.auth();\r\n    const passwordRef = useRef()\r\n    const {login} = useAuth()\r\n    const [error, setError] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const history = useHistory()\r\n    const [user] = useAuthState(auth);\r\n\r\n    \r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            setError(\"\")\r\n            setLoading(true)\r\n            await login(emailRef.current.value, passwordRef.current.value)\r\n            history.push(\"/Home\")\r\n        } catch {\r\n            setError(\"Failed to log in\")\r\n        }\r\n\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    function SignIn() {\r\n\r\n        const signInWithGoogle = () => {\r\n            const provider = new firebase.auth.GoogleAuthProvider();\r\n            auth.signInWithPopup(provider);\r\n        }\r\n       \r\n        return (\r\n            <>   \r\n                <Button className=\"w-100\" onClick={signInWithGoogle}>Zaloguj się przez google</Button>\r\n                {user ?  <Redirect  to=\"/Home\" />:  null }\r\n            </>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <>   \r\n           \r\n            <NaviBar/>\r\n            <Card className=\"align-items-center mt-5 justify-content-center w-100 d-flex\">\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">Zaloguj się</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group id=\"email\">\r\n                            <Form.Label>Adres e-mail:</Form.Label>\r\n                            <Form.Control type=\"email\" ref={emailRef} required/>\r\n                        </Form.Group>\r\n                        <Form.Group id=\"password\">\r\n                            <Form.Label>Hasło:</Form.Label>\r\n                            <Form.Control type=\"password\" ref={passwordRef} required/>\r\n                        </Form.Group>\r\n\r\n                        <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n                            Zaloguj\r\n                        </Button>\r\n                        <br></br> <br></br>\r\n                        <SignIn/>\r\n                    </Form>\r\n                    <div className=\"w-100 text-center mt-3\">\r\n                        <Link to=\"/forgot-password\">Zapomniałeś hasła?</Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n\r\n            <div className=\"w-100 text-center mt-2\">\r\n                Nie masz konta? <Link to=\"/signup\">Zarejestruj się</Link>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Signup.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Contact.js",["103"],"import React from \"react\"\r\nimport NaviBar from \"./NaviBar\";\r\nimport Footer from \"./Footer\";\r\nimport Body from \"./Body\";\r\nimport photo from \"./img/logo_header.png\"\r\nimport './css/style.css'\r\n\r\n\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <>\r\n            <meta charSet=\"utf-8\"/>\r\n            <title>TeleMed</title>\r\n            <div className=\"jumbotron\">\r\n                <div className=\"container\">\r\n                    <table class=\"table table-striped\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Index</th>\r\n                            <th scope=\"col\">Imie</th>\r\n                            <th scope=\"col\">Nazwisko</th>\r\n                            <th scope=\"col\">Email</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">1</th>\r\n                            <td>s18866</td>\r\n                            <td>Mario</td>\r\n                            <td>Gliwa</td>\r\n                            <td>s18866@pjwstk.edu.pl</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">2</th>\r\n                            <td>s18497</td>\r\n                            <td>Karol</td>\r\n                            <td>Skwierawski</td>\r\n                            <td>s18497@pjwstk.edu.pl</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">3</th>\r\n                            <td>s19375</td>\r\n                            <td>Filip</td>\r\n                            <td>Werra</td>\r\n                            <td>s19375@pjwstk.edu.pl</td>\r\n                        </tr>\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            </div>\r\n            <Body/>\r\n            <NaviBar/>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\PrivateRoute.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\UpdateProfile.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Diagnose.js",["104"],"import React from \"react\";\r\nimport photo from \"./img/photo.png\";\r\nimport Footer from \"./Footer\";\r\nimport NaviBar from \"./NaviBar\";\r\n\r\nexport default function Diagnose() {\r\n    return (\r\n        <>\r\n            <NaviBar/>\r\n            <div className=\"jumbotron jumbotron_diagnose\">\r\n                <div className=\"container\">\r\n                    <h1 className=\"display-3\">Automatyczna diagnoza</h1>\r\n                    <p>Wyślij nam swoje zdjęcie rentgenowskie i uzyskaj wynik diagnozy<br/><br/></p>\r\n                </div>\r\n            </div>\r\n            <Footer/>\r\n        </>\r\n    )\r\n}","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Home.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\ForgotPassword.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Chat.js",["105"],"import React, {useRef, useState} from 'react';\r\n\r\nimport './css/style.css'\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nimport {useCollectionData} from 'react-firebase-hooks/firestore';\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nfunction Chat() {\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"App\">\r\n\r\n                <div id=\"chat\">\r\n\r\n                    <section>\r\n\r\n                        <ChatRoom/>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nfunction ChatRoom() {\r\n    const dummy = useRef();\r\n    const messagesRef = firestore.collection('messages');\r\n    const query = messagesRef.orderBy('createdAt').limit(1000);\r\n\r\n    const [messages] = useCollectionData(query, {idField: 'id'});\r\n\r\n    const [formValue, setFormValue] = useState('');\r\n\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n        const {uid, photoURL} = auth.currentUser;\r\n\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        })\r\n\r\n        setFormValue('');\r\n        dummy.current.scrollIntoView({behavior: 'smooth'});\r\n    }\r\n\r\n    return (<>\r\n        <main>\r\n\r\n            {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\r\n\r\n            <span ref={dummy}></span>\r\n\r\n        </main>\r\n\r\n        <form className=\"form\" onSubmit={sendMessage}>\r\n\r\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"napisz coś..\"/>\r\n\r\n            <button type=\"submit\" disabled={!formValue}>🛆</button>\r\n\r\n        </form>\r\n    </>)\r\n}\r\n\r\n\r\nfunction ChatMessage(props) {\r\n    const {text, uid, photoURL} = props.message;\r\n\r\n    const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n    const DEFAULT_IMAGE=\"https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png\"\r\n    return (<>\r\n        <div id=\"body\">\r\n\r\n            <div className={`message ${messageClass}`}>\r\n                <img id=\"photoChat\"  src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} onError={(e)=>{e.target.src=DEFAULT_IMAGE}}/>\r\n                \r\n                <p className=\"p\">{text}</p>\r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nexport default Chat;","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\About.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\DoctorFinder.js",["106","107","108"],"import React, {useRef, useState} from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport {Form, Card} from \"react-bootstrap\";\r\nimport NaviBar from \"./NaviBar\";\r\nimport {map} from \"react-bootstrap/ElementChildren\";\r\nimport DoctorFinderTab from \"./DoctorFinderTab\";\r\n\r\nexport default function DoctorFinder() {\r\n    const [searching, SetSearching] = useState(false);\r\n    const [list, SetList] = useState();\r\n    const selectRef = useRef();\r\n    const radiusRef = useRef();\r\n\r\n    function getLocation() {\r\n        return new Promise(resolve =>\r\n            navigator.geolocation.getCurrentPosition(function (position) {\r\n                resolve(position.coords);\r\n            }));\r\n    }\r\n\r\n    async function handleSearch(event) {\r\n        event.preventDefault();\r\n        SetSearching(true);\r\n        let locations = await getLocation();\r\n        console.log(locations);\r\n        const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n        const url = 'https://maps.googleapis.com/maps/api/place/nearbysearch/json?';\r\n        const location = `location=${locations.latitude},${locations.longitude}`;\r\n        const radius = `&radius=${radiusRef.current.value}`;\r\n        const type = `&keyword=${selectRef.current.value}`;\r\n        const key = '&key=AIzaSyCF3BBVNrwHWDCWqjyQfqXGTZzrA9rjpnw';\r\n        const SearchUrl = proxy + url + location + radius + type + key;\r\n        let x = await myRespone(SearchUrl);\r\n        SetList(x);\r\n    }\r\n\r\n    async function myRespone(SearchUrl) {\r\n        try {\r\n            let res = await fetch(SearchUrl);\r\n            return res.json();\r\n        } catch (err) {\r\n            console.error(err)\r\n        }\r\n    }\r\n\r\n    if (list === undefined) {\r\n        return (\r\n            <div>\r\n                <NaviBar/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <div className=\"mt-5 justify-content-center d-flex \">\r\n                    <Form onSubmit={handleSearch} className=\"mt-5\">\r\n                        <Form.Group>\r\n                            <Form.Label><h2>Czego szukasz?</h2></Form.Label>\r\n                            <Form.Control as=\"select\" ref={selectRef}>\r\n                                <option value=\"doctor\">Lekarz</option>\r\n                                <option value=\"hospital\">Szpital</option>\r\n                                <option value=\"health\">Zdrowie</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>W odległości: (m) </Form.Label>\r\n                            <Form.Control type=\"text\" ref={radiusRef} required/>\r\n                        </Form.Group>\r\n                        <button type=\"submit\" className=\"btn-primary m-5 w-50\">Szukaj</button>\r\n                    </Form>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <DoctorFinderTab data={list}/>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\contexts\\AuthContext.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Footer.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\DoctorFinderTab.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Body.js",["109","110","111"],"import React, {useEffect, useState } from 'react';\r\nimport Chat from './Chat'\r\nimport { Link } from \"react-router-dom\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nimport firebase from 'firebase/app';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nexport default function Body() {\r\n    const auth = firebase.auth();\r\n    const [buttonChat,SetbuttonChat] = useState(false);\r\n    const [user] = useAuthState(auth);\r\n    return (\r\n        <div className=\"container container_body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <h2 className=\"font-weight-bold\">Chat</h2>\r\n                    <p>Wejdz na nasz chat publiczny, gdzie możesz w czasie rzeczywistym oraz anonimowo\r\n                        dyskutować z innymi użytkownikami</p>\r\n\r\n\r\n\r\n\r\n                    {user?\r\n                        <button className=\"btn btn-secondary\" onClick={() => SetbuttonChat(!buttonChat)}>\r\n                            Chatuj!\r\n                        </button> :\r\n                        <Link to=\"/Login\">\r\n                            <button className=\"btn btn-secondary\">\r\n                                Zaloguj\r\n                            </button>\r\n                        </Link>}\r\n                    {buttonChat?<Chat/>:null}\r\n\r\n\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h2 className=\"font-weight-bold\">Lekarze w okolicy</h2>\r\n                    <p>Znajdz lekarzy w swojej okolicy przy użyciu map google. </p>\r\n                    <Link to=\"/find\"><p><a className=\"btn btn-secondary\" role=\"button\">Szukaj! &raquo;</a></p></Link>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <h2 className=\"font-weight-bolder\">Tutaj jeszcze jakaś funkcjonalność</h2>\r\n                    <p>Tu bedzie jeszcze jakaś dodatkowa funkcjonalność z użyciem jakichś\r\n                        technologii od Googla </p>\r\n                    <p><a className=\"btn btn-secondary\" role=\"button\">Już niedługo &raquo;</a></p>\r\n                </div>\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\NaviBar.js",["112","113","114","115"],"import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport 'firebase/auth';\r\nimport firebase from \"firebase\";\r\nimport Logout from \"./Logout\";\r\nconst auth = firebase.auth();\r\n\r\nexport default function NaviBar() {\r\n    const [user] = useAuthState(auth);\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n            <a className=\"navbar-brand\" href=\"#\">TeleMed</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\r\n                    aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"/>\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item \">\r\n                        <Link to=\"/\"> <a className=\"nav-link\">Główna strona <span className=\"sr-only\">(current)</span></a></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact\"><a className=\"nav-link\">Kontakt</a></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\"><a className=\"nav-link\">O nas</a></Link>\r\n                    </li>\r\n\r\n                </ul>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    {!user ? <Link to=\"/login\"> <button className=\"btn-primary\">Zaloguj</button></Link> : <Logout/>}\r\n                </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\firebase.js",[],"C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Logout.js",["116","117"],"import {Button} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default function Logout() {\r\n\r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Button  className=\"btn-primary\" onClick={handleLogout}>\r\n            Wyloguj\r\n        </Button>\r\n\r\n    )\r\n}\r\n\r\n","C:\\Users\\gliwa\\Desktop\\TelemedArc\\Telemed\\src\\components\\Translator.js",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":10,"column":8,"nodeType":"125","messageId":"126","endLine":10,"endColumn":12},{"ruleId":"123","severity":1,"message":"127","line":12,"column":9,"nodeType":"125","messageId":"126","endLine":12,"endColumn":26},{"ruleId":"123","severity":1,"message":"128","line":5,"column":8,"nodeType":"125","messageId":"126","endLine":5,"endColumn":13},{"ruleId":"123","severity":1,"message":"128","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":13},{"ruleId":"129","severity":1,"message":"130","line":88,"column":17,"nodeType":"131","endLine":88,"endColumn":157},{"ruleId":"123","severity":1,"message":"132","line":3,"column":15,"nodeType":"125","messageId":"126","endLine":3,"endColumn":19},{"ruleId":"123","severity":1,"message":"133","line":5,"column":9,"nodeType":"125","messageId":"126","endLine":5,"endColumn":12},{"ruleId":"123","severity":1,"message":"134","line":9,"column":12,"nodeType":"125","messageId":"126","endLine":9,"endColumn":21},{"ruleId":"123","severity":1,"message":"135","line":1,"column":16,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":40,"column":41,"nodeType":"131","endLine":40,"endColumn":88},{"ruleId":"136","severity":1,"message":"137","line":46,"column":24,"nodeType":"131","endLine":46,"endColumn":71},{"ruleId":"136","severity":1,"message":"138","line":13,"column":13,"nodeType":"131","endLine":13,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":22,"column":39,"nodeType":"131","endLine":22,"endColumn":63},{"ruleId":"136","severity":1,"message":"137","line":25,"column":45,"nodeType":"131","endLine":25,"endColumn":69},{"ruleId":"136","severity":1,"message":"137","line":28,"column":43,"nodeType":"131","endLine":28,"endColumn":67},{"ruleId":"123","severity":1,"message":"139","line":8,"column":12,"nodeType":"125","messageId":"126","endLine":8,"endColumn":17},{"ruleId":"123","severity":1,"message":"140","line":9,"column":13,"nodeType":"125","messageId":"126","endLine":9,"endColumn":24},{"ruleId":"123","severity":1,"message":"141","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":28},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'useCollectionData' is defined but never used.","'photo' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Card' is defined but never used.","'map' is defined but never used.","'searching' is assigned a value but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'error' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useAccordionToggle' is defined but never used.","no-global-assign","no-unsafe-negation"]